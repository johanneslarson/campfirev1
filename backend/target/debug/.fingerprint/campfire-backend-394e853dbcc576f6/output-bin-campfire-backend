{"$message_type":"diagnostic","message":"hard linking files in the incremental compilation cache failed. copying files instead. consider moving the cache directory to a file system which supports hard linking in session dir `/Volumes/cfDrive/campfirev1/backend/target/debug/incremental/campfire_backend-0t6nsj4r345p6/s-h61ekxfd2x-1osxfi2-working`","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: hard linking files in the incremental compilation cache failed. copying files instead. consider moving the cache directory to a file system which supports hard linking in session dir `/Volumes/cfDrive/campfirev1/backend/target/debug/incremental/campfire_backend-0t6nsj4r345p6/s-h61ekxfd2x-1osxfi2-working`\u001b[0m\n\n"}

thread 'coordinator' panicked at /rustc/f8c27dfe1a2e7fb538fd91dad53de06992c7c967/compiler/rustc_codegen_ssa/src/back/write.rs:1692:29:
/rustc/f8c27dfe1a2e7fb538fd91dad53de06992c7c967/compiler/rustc_codegen_ssa/src/back/write.rs:1692:29: worker thread panicked
stack backtrace:
   0:        0x110945184 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::hb2783cc6258439bb
   1:        0x10e028ccc - core::fmt::write::h9ed8a74129a037db
   2:        0x110939ec0 - std::io::Write::write_fmt::h19db2183d3d60c8f
   3:        0x110945044 - std::sys::backtrace::BacktraceLock::print::h319ccd2d2e6d4d90
   4:        0x110947644 - std::panicking::default_hook::{{closure}}::h3f2c345b2d0a9ed9
   5:        0x110947310 - std::panicking::default_hook::h98870f10bd1b4463
   6:        0x10eaeff90 - std[328111cb779a6292]::panicking::update_hook::<alloc[8f100db772e1a443]::boxed::Box<rustc_driver_impl[949af1ab1a7a7c5c]::install_ice_hook::{closure#1}>>::{closure#0}
   7:        0x110948030 - std::panicking::rust_panic_with_hook::h58383fcb95b2585f
   8:        0x10f665e90 - std[328111cb779a6292]::panicking::begin_panic::<alloc[8f100db772e1a443]::string::String>::{closure#0}
   9:        0x10f653cec - std[328111cb779a6292]::sys::backtrace::__rust_end_short_backtrace::<std[328111cb779a6292]::panicking::begin_panic<alloc[8f100db772e1a443]::string::String>::{closure#0}, !>
  10:        0x113665fcc - std[328111cb779a6292]::panicking::begin_panic::<alloc[8f100db772e1a443]::string::String>
  11:        0x11366e774 - rustc_middle[2dff1f0c1460a9ff]::util::bug::opt_span_bug_fmt::<rustc_span[323a4114fc771248]::span_encoding::Span>::{closure#0}
  12:        0x10f73857c - rustc_middle[2dff1f0c1460a9ff]::ty::context::tls::with_opt::<rustc_middle[2dff1f0c1460a9ff]::util::bug::opt_span_bug_fmt<rustc_span[323a4114fc771248]::span_encoding::Span>::{closure#0}, !>::{closure#0}
  13:        0x10f73804c - rustc_middle[2dff1f0c1460a9ff]::ty::context::tls::with_context_opt::<rustc_middle[2dff1f0c1460a9ff]::ty::context::tls::with_opt<rustc_middle[2dff1f0c1460a9ff]::util::bug::opt_span_bug_fmt<rustc_span[323a4114fc771248]::span_encoding::Span>::{closure#0}, !>::{closure#0}, !>
  14:        0x11366e680 - rustc_middle[2dff1f0c1460a9ff]::util::bug::bug_fmt
  15:        0x10e78677c - rustc_codegen_ssa[1d23a5dfe549fdb7]::back::write::start_executing_work::<rustc_codegen_llvm[324291df89880285]::LlvmCodegenBackend>::{closure#5}
  16:        0x10e76d1ac - std[328111cb779a6292]::sys::backtrace::__rust_begin_short_backtrace::<<rustc_codegen_llvm[324291df89880285]::LlvmCodegenBackend as rustc_codegen_ssa[1d23a5dfe549fdb7]::traits::backend::ExtraBackendMethods>::spawn_named_thread<rustc_codegen_ssa[1d23a5dfe549fdb7]::back::write::start_executing_work<rustc_codegen_llvm[324291df89880285]::LlvmCodegenBackend>::{closure#5}, core[27da1d49c94a35ee]::result::Result<rustc_codegen_ssa[1d23a5dfe549fdb7]::back::write::CompiledModules, ()>>::{closure#0}, core[27da1d49c94a35ee]::result::Result<rustc_codegen_ssa[1d23a5dfe549fdb7]::back::write::CompiledModules, ()>>
  17:        0x10e78cbd8 - <<std[328111cb779a6292]::thread::Builder>::spawn_unchecked_<<rustc_codegen_llvm[324291df89880285]::LlvmCodegenBackend as rustc_codegen_ssa[1d23a5dfe549fdb7]::traits::backend::ExtraBackendMethods>::spawn_named_thread<rustc_codegen_ssa[1d23a5dfe549fdb7]::back::write::start_executing_work<rustc_codegen_llvm[324291df89880285]::LlvmCodegenBackend>::{closure#5}, core[27da1d49c94a35ee]::result::Result<rustc_codegen_ssa[1d23a5dfe549fdb7]::back::write::CompiledModules, ()>>::{closure#0}, core[27da1d49c94a35ee]::result::Result<rustc_codegen_ssa[1d23a5dfe549fdb7]::back::write::CompiledModules, ()>>::{closure#1} as core[27da1d49c94a35ee]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}
  18:        0x11094c0c4 - std::sys::pal::unix::thread::Thread::new::thread_start::h4341cfc7ac4ebbb1
  19:        0x19039c2e4 - __pthread_deallocate

error: the compiler unexpectedly panicked. this is a bug.

note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md

note: please make sure that you have updated to the latest nightly

note: please attach the file at `/Volumes/cfDrive/campfirev1/backend/rustc-ice-2025-04-02T01_07_07-10677.txt` to your bug report

note: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C split-debuginfo=unpacked -C incremental=[REDACTED]

note: some of the compiler flags provided by cargo are hidden

query stack during panic:
end of query stack
{"$message_type":"diagnostic","message":"cached cgu a8znqb6m8sgb4ilm8ynjejqtk should have an object file, but doesn't","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cached cgu a8znqb6m8sgb4ilm8ynjejqtk should have an object file, but doesn't\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 1 previous error; 1 warning emitted\u001b[0m\n\n"}
